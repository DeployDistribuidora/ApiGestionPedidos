@model Front_End_Gestion_Pedidos.Models.ViewModel.DetallePedidoViewModel
@inject IHttpContextAccessor HttpContextAccessor

<div class="container">
    @* <h5 class="text-primary">Detalle del Pedido</h5> *@

    <!-- Información del Pedido -->
    <div class="row mb-3">
        <div class="col-md-6">
            <p><strong>ID Pedido:</strong> @Model.Pedido.IdPedido</p>
            <p><strong>Direccion:</strong> @Model.Pedido.Direccion</p>
            <p><strong>Vendedor:</strong> @(Model.Pedido.IdVendedor.HasValue ? Model.Pedido.IdVendedor.ToString() : "No asignado")</p>
            <p><strong>Cliente:</strong> @Model.Pedido.IdCliente - @Model.Cliente.NombreCliente</p>
            <p><strong>Cedula:</strong> @Model.Cliente.Cedula</p>
            <p><strong>Numero de telefono:</strong> @Model.Cliente.TelefCliente</p>
        </div>
        <div class="col-md-6">
            <p><strong>Método de Pago:</strong> @Model.Pedido.MetodoPago</p>
            <p><strong>Fecha Creación:</strong> @Model.Pedido.FechaCreacion.ToString("dd/MM/yyyy")</p>
            <p><strong>Fecha Entregado:</strong> @(Model.Pedido.FechaEntregado.HasValue ? Model.Pedido.FechaEntregado.Value.ToString("dd/MM/yyyy") : "No definida")</p>
            <p><strong>Estado:</strong> @Model.Pedido.Estado</p>           
        </div>
    </div>

    <!-- Detalle de los Productos -->
    <h5 class="text-primary">Productos</h5>    
    @if (Model.LineasPedido != null && Model.LineasPedido.Any())
    {
        <div class="table-responsive">
            <table class="table table-hover table-sm">
                <thead>
                    <tr>
                        <th>Nombre</th>
                        <th>Cantidad</th>
                        <th>Precio</th>
                        <th>Subtotal</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var linea in Model.LineasPedido)
                    {
                        <tr>
                            <td>@linea.DescripcionProducto</td>
                            <td>@linea.lineaPedido.Cantidad</td>
                            <td>@linea.lineaPedido.PrecioUnitario.ToString("C")</td>
                            <td>@linea.lineaPedido.Subtotal.ToString("C")</td>
                        </tr>
                    }
                </tbody>
            </table>
             <p><strong>Total:</strong> @Model.Pedido.Total.ToString("C")</p>
        </div>
    }
    else
    {
        <div class="text-center text-muted">
            <p>No hay productos asociados a este pedido.</p>
        </div>
    }

    @if (HttpContextAccessor.HttpContext.Session.GetString("Role") != "Supervisor de Carga")
    {
        <div class="text-end mb-3">
            <!-- Botón Repetir pedido -->
            @if (Model.Pedido.Estado.Equals("Entregado", StringComparison.OrdinalIgnoreCase))
            {
                <a href="@Url.Action("RepetirPedido", "Pedidos", new { idPedido = Model.Pedido.IdPedido })"
                   class="btn btn-outline-primary btn-sm me-2">
                    <i class="bi bi-arrow-repeat"></i> Repetir pedido
                </a>
            }

          

           @*  @if (!Model.Pedido.Estado.Equals("Cancelado", StringComparison.OrdinalIgnoreCase) &&
           !Model.Pedido.Estado.Equals("Entregado", StringComparison.OrdinalIgnoreCase))
            {
                <form method="post" action="@Url.Action("CambiarEstadoPedido", "Pedidos")" style="display: inline;">
                    <input type="hidden" name="id" value="@Model.Pedido.IdPedido" />
                    <input type="hidden" name="nuevoEstado" value="Cancelado" />
                    <button type="submit" class="btn btn-outline-danger btn-sm">
                        <i class="bi bi-x-circle"></i> Cancelar pedido
                    </button>
                </form>
            } *@

            @if (!Model.Pedido.Estado.Equals("Cancelado", StringComparison.OrdinalIgnoreCase) &&
           !Model.Pedido.Estado.Equals("Entregado", StringComparison.OrdinalIgnoreCase) &&
           !Model.Pedido.Estado.Equals("En viaje", StringComparison.OrdinalIgnoreCase) &&
           !Model.Pedido.Estado.Equals("Preparando", StringComparison.OrdinalIgnoreCase))
            {
                <form method="post" action="@Url.Action("CambiarEstadoPedido", "Pedidos")" style="display: inline;">
                    <input type="hidden" name="id" value="@Model.Pedido.IdPedido" />
                    <input type="hidden" name="nuevoEstado" value="Cancelado" />
                    <button type="submit" class="btn btn-outline-danger btn-sm">
                        <i class="bi bi-x-circle"></i> Cancelar pedido
                    </button>
                </form>
            }
        </div>
    }



        <!-- Comentarios -->
    <h5 class="text-primary">Comentarios</h5> 
    <div class="row">
        <div class="col-md-12">            
            <div>
                <textarea class="form-control form-control-sm" rows="5" readonly style="resize: none; overflow-y: auto;">
                    @(string.IsNullOrEmpty(Model.Pedido.Comentarios) ? "Sin comentarios" : Model.Pedido.Comentarios)
                </textarea>
            </div>
        </div>        
    </div>
</div>

