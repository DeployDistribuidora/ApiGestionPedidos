@model Front_End_Gestion_Pedidos.Models.ViewModel.HistorialPedidosViewModel
@inject IHttpContextAccessor HttpContextAccessor

<div class="pagetitle">
    <h1>Historial pedidos</h1>
</div>

<div class="alert alert-info d-inline-block" role="alert">
    Se muestran únicamente los pedidos entregados y cancelados.
</div>

<section class="section">
    <div class="row">
 <!-- Filtros de Búsqueda -->
<div class="col-lg-5">
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Filtros de Búsqueda</h5>
            <form method="get" asp-action="HistorialPedidos" class="row g-3">

                <!-- Filtro por ID de Pedido -->
                <div class="col-md-6">
                    <label for="inputIdPedido" class="form-label">ID de Pedido</label>
                    <input type="text" id="inputIdPedido" name="idPedido" class="form-control form-control-sm"
                           placeholder="ID del pedido" value="@HttpContextAccessor.HttpContext.Request.Query["idPedido"]">
                </div>

                <!-- Filtro por Fechas -->
                <div class="col-md-6">
                    <label for="inputFechas" class="form-label">Rango de Fechas</label>
                    <div class="input-group">
                        <input type="date" id="fechaInicio" name="fechaInicio" class="form-control form-control-sm"
                               value="@HttpContextAccessor.HttpContext.Request.Query["fechaInicio"]" />
                        <span class="input-group-text">a</span>
                        <input type="date" id="fechaFin" name="fechaFin" class="form-control form-control-sm"
                               value="@HttpContextAccessor.HttpContext.Request.Query["fechaFin"]" />
                    </div>
                </div>

                <!-- Filtro por Vendedor -->
                <div class="col-md-6">
                    <label for="filterVendedor" class="form-label">Vendedor</label>
                    <input type="text" id="filterVendedor" class="form-control form-control-sm mb-2"
                            placeholder="Escribe para buscar un vendedor..." oninput="filterVendedores()">

                    <!-- Contenedor de opciones scrolleable -->
                    <div id="vendedoresContainer" class="border rounded p-2" style="max-height: 150px; overflow-y: auto;">
                        @foreach (var vendedor in Model.Vendedores)
                        {
                            <div class="vendedor-option"
                                    data-nombre="@vendedor.Nombre"
                                    data-id="@vendedor.nro_Vendedor"
                                    onclick="selectVendedor('@vendedor.Nombre', '@vendedor.nro_Vendedor')">
                                @vendedor.Nombre
                            </div>
                        }
                    </div>

                    <!-- Campo oculto para enviar el vendedor seleccionado -->
                    <input type="hidden" id="selectedVendedor" name="vendedor">
                </div>

                 <!-- Mostrar filtro por cliente solo si el rol no es "Cliente" -->
                @if (HttpContextAccessor.HttpContext.Session.GetString("Role") != "Cliente")
                {
                    <div class="col-md-6">
                        <label for="filterCliente" class="form-label">Cliente</label>
                        <input type="text" id="filterCliente" class="form-control form-control-sm mb-2" 
                               placeholder="Escribe para buscar un cliente..." oninput="filterClientes()">

                        <!-- Contenedor de opciones scrolleable -->
                        <div id="clientesContainer" class="border rounded p-2" style="max-height: 150px; overflow-y: auto;">
                            @foreach (var cliente in Model.Clientes)
                            {
                                <div class="cliente-option" 
                                     data-nombre="@cliente.NombreCliente" 
                                     data-id="@cliente.NroCliente" 
                                     onclick="selectCliente('@cliente.NombreCliente', '@cliente.NroCliente')">
                                    @cliente.NombreCliente
                                </div>
                            }
                        </div>

                        <!-- Campo oculto para enviar el cliente seleccionado -->
                        <input type="hidden" id="selectedCliente" name="cliente">
                    </div>
                }



                <div class="text-center mt-3">
                    <button type="submit" class="btn btn-primary btn-sm">Buscar</button>
                </div>
            </form>
        </div>
    </div>
</div>



        <!-- Tabla de Pedidos -->
        <div class="col-lg-7">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Pedidos</h5>
                    <div class="table-responsive">
                        <table class="table table-hover table-sm">
                            <thead class="table-primary">
                                <tr>
                                    <th scope="col"></th>
                                    <th scope="col">Pedido</th>
                                    <th scope="col">Cliente</th>
                                    <th scope="col" class="d-none d-md-table-cell">Vendedor</th>
                                    <th scope="col">Estado</th>
                                    <th scope="col" class="d-none d-md-table-cell">Creación</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (!Model.Pedidos.Any())
                                {
                                    <tr>
                                        <td colspan="6" class="text-center text-muted">No se encontraron pedidos con los filtros aplicados.</td>
                                    </tr>
                                }
                                else
                                {
                                    @foreach (var pedido in Model.Pedidos)
                                    {
                                        var cliente = Model.Clientes.FirstOrDefault(c => c.NroCliente == pedido.IdCliente);
                                        <tr>
                                            <td>
                                                <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#modalDetallePedido" data-id-pedido="@pedido.IdPedido" title="Ver Detalles">
                                                    <i class="bi bi-eye"></i>
                                                </button>
                                            </td>

                                            <td>@pedido.IdPedido</td>
                                            <td>@cliente.NombreCliente</td>
                                            <td class="d-none d-md-table-cell">
                                                @Model.Vendedores.FirstOrDefault(v => v.nro_Vendedor == pedido.IdVendedor)?.Nombre
                                            </td>
                                            <td>@pedido.Estado</td>
                                            <td class="d-none d-md-table-cell">@pedido.FechaCreacion.ToShortDateString()</td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>


    </div>

    <!-- Modal Dialog Scrollable -->
    <div class="modal fade" id="modalDetallePedido" tabindex="-1">
        <div class="modal-dialog modal-dialog-scrollable modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Detalle del Pedido</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="detallePedidoContent" class="text-center text-muted">
                        Cargando...
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>

</section>



<script>
    const modalDetallePedido = document.getElementById('modalDetallePedido');

    modalDetallePedido.addEventListener('show.bs.modal', function (event) {
        const button = event.relatedTarget;
        const idPedido = button.getAttribute('data-id-pedido');
        const detalleContent = document.getElementById('detallePedidoContent');

        // Mostrar mensaje de carga
        detalleContent.innerHTML = "Cargando...";

        // Cargar contenido dinámicamente desde el controlador
        fetch(`/Pedidos/DetallePedido?idPedido=${idPedido}`)
            .then(response => response.text())
            .then(html => {
                detalleContent.innerHTML = html;
            })
            .catch(error => {
                detalleContent.innerHTML = `<div class="text-danger">Error al cargar el detalle: ${error.message}</div>`;
            });
    });
</script>


<script>
    // Función para cargar el contenido dinámico del detalle del pedido en el modal
    function cargarDetallePedido(event) {
        const button = event.relatedTarget;
        const idPedido = button.getAttribute('data-id-pedido');
        const detalleContent = document.getElementById('detallePedidoContent');

        // Mostrar mensaje de carga
        detalleContent.innerHTML = "Cargando...";

        // Cargar contenido dinámicamente desde el controlador
        fetch(`/Pedidos/DetallePedido?idPedido=${idPedido}`)
            .then(response => response.text())
            .then(html => {
                detalleContent.innerHTML = html;
            })
            .catch(error => {
                detalleContent.innerHTML = `<div class="text-danger">Error al cargar el detalle: ${error.message}</div>`;
            });
    }

    // Función para filtrar clientes en tiempo real
    function filterClientes() {
        const input = document.getElementById('filterCliente').value.toLowerCase();
        const options = document.querySelectorAll('#clientesContainer .cliente-option');

        options.forEach(option => {
            const nombre = option.dataset.nombre.toLowerCase();
            option.style.display = nombre.includes(input) ? 'block' : 'none';
        });
    }

    // Función para seleccionar un cliente y actualizar el campo oculto y el input de búsqueda
    function selectCliente(nombreCliente, nroCliente) {
    const selectedClienteInput = document.getElementById('selectedCliente');
    const filterClienteInput = document.getElementById('filterCliente');
    const options = document.querySelectorAll('#clientesContainer .cliente-option');

    // Establecer el nroCliente seleccionado en el input oculto
    selectedClienteInput.value = nroCliente;

    // Reflejar el nombre del cliente en el campo de búsqueda
    filterClienteInput.value = nombreCliente;

    // Ocultar todas las opciones tras la selección
    options.forEach(option => {
        option.style.display = 'none';
    });
}


    // Evento para inicializar el modal de detalle del pedido
    document.getElementById('modalDetallePedido').addEventListener('show.bs.modal', cargarDetallePedido);
</script>

<script>
    function filterVendedores() {
        const input = document.getElementById('filterVendedor').value.toLowerCase();
        const options = document.querySelectorAll('#vendedoresContainer .vendedor-option');

        options.forEach(option => {
            const nombre = option.dataset.nombre.toLowerCase();
            option.style.display = nombre.includes(input) ? 'block' : 'none';
        });
    }

    function selectVendedor(nombre, nroVendedor) {
        const selectedVendedorInput = document.getElementById('selectedVendedor');
        const filterVendedorInput = document.getElementById('filterVendedor');
        const options = document.querySelectorAll('#vendedoresContainer .vendedor-option');

        selectedVendedorInput.value = nroVendedor;
        filterVendedorInput.value = nombre;

        options.forEach(option => {
            option.style.display = 'none';
        });
    }
</script>
